!function(){"use strict";var e="undefined"==typeof global?self:global;if("function"!=typeof e.require){var n={},o={},t={},i={}.hasOwnProperty,r=/^\.\.?(\/|$)/,s=function(e,n){for(var o,t=[],i=(r.test(n)?e+"/"+n:n).split("/"),s=0,a=i.length;s<a;s++)o=i[s],".."===o?t.pop():"."!==o&&""!==o&&t.push(o);return t.join("/")},a=function(e){return e.split("/").slice(0,-1).join("/")},c=function(n){return function(o){var t=s(a(n),o);return e.require(t,n)}},l=function(e,n){var t=g&&g.createHot(e),i={id:e,exports:{},hot:t};return o[e]=i,n(i.exports,c(e),i),i.exports},d=function(e){return t[e]?d(t[e]):e},h=function(e,n){return d(s(a(e),n))},p=function(e,t){null==t&&(t="/");var r=d(e);if(i.call(o,r))return o[r].exports;if(i.call(n,r))return l(r,n[r]);throw new Error("Cannot find module '"+e+"' from '"+t+"'")};p.alias=function(e,n){t[n]=e};var u=/\.[^.\/]+$/,f=/\/index(\.[^\/]+)?$/,m=function(e){if(u.test(e)){var n=e.replace(u,"");i.call(t,n)&&t[n].replace(u,"")!==n+"/index"||(t[n]=e)}if(f.test(e)){var o=e.replace(f,"");i.call(t,o)||(t[o]=e)}};p.register=p.define=function(e,t){if(e&&"object"==typeof e)for(var r in e)i.call(e,r)&&p.register(r,e[r]);else n[e]=t,delete o[e],m(e)},p.list=function(){var e=[];for(var o in n)i.call(n,o)&&e.push(o);return e};var g=e._hmr&&new e._hmr(h,p,n,o);p._cache=o,p.hmr=g&&g.wrap,p.brunch=!0,e.require=p}}(),function(){"undefined"==typeof window?this:window;require.register("README.md",function(e,n,o){var t='<h1 id="valenski">valenski</h1>\n<p><strong>the minimal SASS library</strong></p>\n<p><a href="https://github.com/hay/valenski"><strong>Source on Github</strong></a></p>\n<p><strong>valenski</strong> is a lightweight set of <a href="http://sass-lang.com/">SASS</a> mixins, classes, resets and values that simplify your workflow. By <a href="http://github.com/hay">Hay Kranen</a>.</p>\n<aside class="aside"></aside>\n\n<h2 id="philosophy">Philosophy</h2>\n<p><strong>valenski</strong> was written because i needed it. I produce around a static website every week with very different requirements and designs, so something like <a href="http://getbootstrap.com/">Bootstrap</a> is far too heavy and opinionated. After producing more than 100 websites in two years i discovered that the only things i always needed where:</p>\n<ul>\n<li>A very bare-bones CSS reset that puts an emphasis on using the <a href="https://www.sitepoint.com/understanding-and-using-rem-units-in-css/">rem unit</a>.</li>\n<li>Some SASS variables for common responsive breakpoints.</li>\n<li>SASS utility mixins, for making responsive design easier and for reusing some common CSS hacks.</li>\n<li>Optional buffer classes for overwriting default margins on elements.</li>\n</ul>\n<h2 id="installation">Installation</h2>\n<p><strong>valenski</strong> only works with <a href="http://sass-lang.com/">SASS</a>. You&#39;ll probably want to use a package manager, such as <a href="https://www.npmjs.com/">npm</a> or <a href="https://yarnpkg.com/lang/en/">yarn</a>. Then add it to your project:</p>\n<pre><code>npm install --save valenski</code></pre>\n<p>And include the master file in your SASS file.</p>\n<pre><code>@import &quot;node_modules/valenski/valenski&quot;;</code></pre>\n<p>Optionally you can only include the reset without the classes:</p>\n<pre><code>@import &quot;node_modules/valenski/valenski-reset&quot;;</code></pre>\n<p>Or even just the values and mixins:</p>\n<pre><code>@import &quot;node_modules/valenski/values&quot;;\n@import &quot;node_modules/valenski/mixins&quot;;</code></pre>\n<h2 id="mixins">Mixins</h2>\n<p><strong>valenski</strong> contains around 20 simple yet powerful utilities.</p>\n<h3 id="-respond-"><code>respond-*</code></h3>\n<p>You can use <code>respond-from</code>, <code>respond-until</code> and <code>respond-between</code> to simplify the writing of media queries. Use these mixins in conjunction with the <a href="#screen-breakpoints">screen breakpoint values</a>.</p>\n<pre><code>.grid {\n    display: flex;\n    flex-wrap: wrap;\n\n    @include respond-until($screen-sm) {\n        li {\n            width: 100%;\n        }\n    }\n\n    @include respond-between($screen-sm, $screen-md) {\n        li {\n            width: 50%;\n        }\n    }\n\n    @include respond-from($screen-md) {\n        li {\n            width: 25%;\n        }\n    }\n}</code></pre>\n<h3 id="-wh-"><code>wh</code></h3>\n<p><code>wh</code> is a shortcut for the <code>width</code> and <code>height</code> properties. If you use only one argument <code>width</code> and <code>height</code> will get the same value.</p>\n<pre><code>header {\n    @include wh(100vw, 20vh);\n}\n\nheader h1 {\n    @include wh(20rem);\n}</code></pre>\n<h3 id="-pos-"><code>pos</code></h3>\n<p><code>pos</code> is a shortcut for the <code>top</code>, <code>right</code>, <code>bottom</code> and <code>left</code> properties.</p>\n<pre><code>.footer {\n    @include pos(50vh, 25%, 25%, 10rem);\n}</code></pre>\n<p>If only one argument is given, <code>pos</code> will set the same value to all properties.</p>\n<pre><code>.overlay {\n    @include pos(0);\n}</code></pre>\n<h3 id="-clearfix-"><code>clearfix</code></h3>\n<p>A mixin for the famous <a href="https://css-tricks.com/snippets/css/clear-fix/">clearfix</a> hack.</p>\n<pre><code>.clearfix {\n    @include clearfix;\n}</code></pre>\n<h3 id="-transform-center-"><code>transform-center-*</code></h3>\n<p>Centers an element using the <a href="https://css-tricks.com/centering-percentage-widthheight-elements/">transform</a> hack. Either horizontal (<code>transform-center-horizontal</code>), vertical (<code>transform-center-vertical</code>) or both (<code>transform-center</code>).</p>\n<pre><code>body {\n    position: relative;\n    @include wh(100vw, 100vh);\n}\n\nh1 {\n    @include transform-center; // center both horizontally and vertically\n}\n\nh2 {\n    @include transform-center-horizontal; // only center horizontally\n}\n\nh3 {\n    @include transform-center-vertically; // only center vertically\n}</code></pre>\n<h3 id="-flex-center-"><code>flex-center</code></h3>\n<p>Center child elements using flexbox. Compare this to the <a href="#-transform-center-">transform-center</a> mixins that centers the element you apply it to. If you have more than one child elements they will be aligned on the vertical axis. To align horizontally try <code>@include flex-center(row);</code></p>\n<pre><code>body {\n    @include flex-center;\n}\n\nh1 {\n    // this element will be centered\n}\n\nul {\n    // centers child elements on horizontal axis\n    @include flex-center(row);\n}</code></pre>\n<h3 id="-child-margins-"><code>child-margins</code></h3>\n<p>Set <code>margin-top</code> on all child elements using the <a href="https://alistapart.com/article/axiomatic-css-and-lobotomized-owls">lobotomized owl selector</a>. By default uses the <code>$valenski-base-unit</code> variable.</p>\n<pre><code>main {\n    @include child-margins(3rem);\n}</code></pre>\n<h3 id="-background-center-"><code>background-center</code></h3>\n<p>Center the <code>background-image</code>, by default sizing with the <code>cover</code> option. If you want to size with the <code>contain</code> option you can give that as an option.</p>\n<pre><code>figure {\n    @include background-center;\n    background-image: url(&#39;img/figure.jpg&#39;);\n}\n\nbody {\n    @include background-center(contain);\n    background-image: url(&#39;img/background.jpg&#39;);\n}</code></pre>\n<h2 id="values">Values</h2>\n<p><strong>valenski</strong> contains a couple of breakpoints variables for mediaqueries and some variables that set defaults for mixins, resets and classes.</p>\n<h3 id="screen-breakpoints">Screen breakpoints</h3>\n<p>These are lifted from <a href="http://getbootstrap.com/css/#grid-options">Bootstrap</a>.</p>\n<ul>\n<li><code>$screen-xs: 480px</code></li>\n<li><code>$screen-sm: 768px</code></li>\n<li><code>$screen-md: 992px</code></li>\n<li><code>$screen-lg: 1200px</code></li>\n</ul>\n<h3 id="valenski-variables">Valenski variables</h3>\n<ul>\n<li><code>$valenski-screen-small-height: 650px</code><ul>\n<li>This is used to set a smaller size for the <code>rem</code> unit under this screen height</li>\n</ul>\n</li>\n<li><code>$valenski-base-unit: 10px</code><ul>\n<li>Used for spacing and the <code>buffer-*</code> classes</li>\n</ul>\n</li>\n<li><code>$valenski-font-size-base: 10px</code><ul>\n<li>What <code>1rem</code> should be</li>\n</ul>\n</li>\n<li><code>$valenski-font-size-small: 8px</code><ul>\n<li>What <code>1rem</code> should be on small devices (&lt;768px)</li>\n</ul>\n</li>\n</ul>\n<h2 id="reset">Reset</h2>\n<p><strong>valenski</strong> contains a barebones reset. It only sets margins and paddings to zero, defaults to using <code>border-box</code> for <code>box-sizing</code> and does some common sense styling for elements like removing the border for the <code>img</code> element on Internet Explorer 9. It also sets up the <code>rem</code> element so <code>1rem = 10px</code>, except for mobile devices (under 768px) and small screens (in height) where it is 8px. Both values can be overwritten using the <a href="#valenski-variables"><code>$valenski-font-size-base</code> and <code>$valenski-font-size-small</code> values</a>. Using this technique you can do this:</p>\n<pre><code>p {\n    font-size: 2rem; // Translates to 20px and 16px for mobile\n}</code></pre>\n<h2 id="classes">Classes</h2>\n<p><strong>valenski</strong> contains <code>buffer-*</code> classes that can be used for vertical spacing between elements. The spacing is based on the <a href="#valenski-variables"><code>$valenski-base-unit</code> variable</a> (by default this is 10px). For example:</p>\n<pre><code>&lt;header class=&quot;buffer-3&quot;&gt; &lt;!-- Add 15px margin add the top and bottom --&gt;\n    &lt;h1 class=&quot;buffer-bottom-1&quot;&gt;Header with 10px margin at the bottom&lt;/h1&gt;\n    &lt;h2 class=&quot;buffer-top-0&quot;&gt;Subheader with no margin at top&lt;/h2&gt;\n&lt;/header&gt;</code></pre>\n<p><a href="https://github.com/hay/valenski"><strong>Source on Github</strong></a></p>\n';"function"==typeof define&&define.amd?define([],function(){return t}):"object"==typeof o&&o&&o.exports&&(o.exports=t)}),require.register("app.js",function(e,n,o){var t=n("README.md"),i=document.querySelector.bind(document);i("main").innerHTML=t}),require.register("aside.md",function(e,n,o){var t='<ul>\n    <li>\n        <a class="github-button"\n           href="https://github.com/hay/valenski"\n           data-icon="octicon-star"\n           data-size="large"\n           aria-label="Star hay/valenski on GitHub">Star</a>\n    </li>\n</ul>';"function"==typeof define&&define.amd?define([],function(){return t}):"object"==typeof o&&o&&o.exports&&(o.exports=t)}),require.register("___globals___",function(e,n,o){})}(),require("___globals___");